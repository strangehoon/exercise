# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.
# This workflow will build a Java project with Gradle and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-java-with-gradle

name: "Build and push to ECR"
on:
  push:
    branches:
      - main
  pull_request:
jobs:
  BuildAndPushImageToECR:
    name: "Build and Push to ECR"
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }} 

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR üè∑
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          ECR_REPOSITORY: "seniors"
          IMAGE_TAG: v1
        run: |
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"



#      # Î∞∞Ìè¨ Í≤∞Í≥º Slack ÏïåÎûå Ï†ÑÏÜ°
#      - name: Slack ÏïåÎûå Î∞úÏÜ°
#        uses: rtCamp/action-slack-notify@v2
#        env:
#          SLACK_CHANNEL: general
#          SLACK_COLOR: ${{ job.status }} # or a specific color like 'good' or '#ff00ff'
#          SLACK_ICON: https://github.com/rtCamp.png?size=48
#          SLACK_MESSAGE: Î∞∞Ìè¨ Í≤∞Í≥º => ${{ job.status }}
#          SLACK_TITLE: Î∞∞Ìè¨ Í≤∞Í≥º ÏïåÎûå
#          SLACK_USERNAME: Notification-Bot
#          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK_URL }}
#        if: always()
